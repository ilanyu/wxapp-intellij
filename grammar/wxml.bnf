{
	parserClass="com.github.zxj5470.wxapp.psi.wxml.WxmlParser"
	extends="com.intellij.extapi.psi.ASTWrapperPsiElement"
	psiClassPrefix="Wxml"
	psiImplClassSuffix="Impl"
	psiPackage="com.github.zxj5470.wxapp.psi"
	psiImplPackage="com.github.zxj5470.wxapp.psi.impl.wxml"

	tokenTypeClass="com.github.zxj5470.wxapp.psi.wxml.WxmlTokenType"
	elementTypeHolderClass="com.github.zxj5470.wxapp.psi.wxml.WxmlTypes"
	elementTypeClass="com.github.zxj5470.wxapp.psi.wxml.WxmlElementType"
}

wxmlFile ::= ws (tags)*

	ws ::= endOfLine*
		private endOfLine::= WHITE_SPACE | EOL | comment
			comment ::= COMMENT_BEGIN commentContent COMMENT_END
				commentContent::= ws validRValue? ws

	tags ::= tagOnly | (tagOpen ws content? tagClose) ws
		tagOpen ::= tagHead GT
		tagOnly ::= tagHead GT_END
			private tagHead ::= LT tagName ws attrList?
		content::= (tags|value)* ws
		tagClose ::= LT_END tagName GT

		attrList ::= ws attr* justAttrName?
			attr ::= justAttrName assign attrValue ws
				justAttrName::=  wxAttr | simpleAttr
					wxAttr ::= WX COLON wxKeyword
					simpleAttr::= chars (MINUS chars)?
				attrValue::= attrSingleQuoted | attrDoubleQuoted
					attrSingleQuoted ::= S_QUOTE attrSingleQuotedValue? S_QUOTE
					attrDoubleQuoted ::= D_QUOTE_START attrDoubleQuotedValue? D_QUOTE_END
						attrSingleQuotedValue ::= value
						attrDoubleQuotedValue ::= value
							value::= validRValue | (DBL_LBR validRValue DBL_RBR)
								validRValue::= vv (COLON vv)*
									private vv::= VALID_INTEROP | chars

tagName ::= chars
chars::= SIMPLE_SYMBOL
wxKeyword ::= WX_IF
	| WX_ELIF
	| WX_ELSE
	| WX_KEY
	| WX_FOR
	| WX_ITEM
	| WX_FOR_INDEX
	| WX_FOR_ITEM
