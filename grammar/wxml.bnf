{
	parserClass="com.github.zxj5470.wxapp.psi.wxml.WxmlParser"
	extends="com.intellij.extapi.psi.ASTWrapperPsiElement"
	psiClassPrefix="Wxml"
	psiImplClassSuffix="Impl"
	psiPackage="com.github.zxj5470.wxapp.psi"
	psiImplPackage="com.github.zxj5470.wxapp.psi.impl.wxml"

	tokenTypeClass="com.github.zxj5470.wxapp.psi.wxml.WxmlTokenType"
	elementTypeHolderClass="com.github.zxj5470.wxapp.psi.wxml.WxmlTypes"
	elementTypeClass="com.github.zxj5470.wxapp.psi.wxml.WxmlElementType"
}

wxmlFile ::= ws (tags)*
	ws ::= endOfLine*
	tags ::=(tagOpen ws content? tagClose) ws
		tagOpen ::= LT tagName ws attrList? GT
		content::= tags|value ws
		tagClose ::= LT_END tagName GT

		attrList ::= attr* justAttrName?
			attr ::= justAttrName assign attrValue
				justAttrName::=  wxAttr | simpleAttr
					wxAttr ::= wx COLON wxKeyword
					simpleAttr::= chars (MINUS chars)?
				attrValue::= attrSingleQuoted | attrDoubleQuoted
					attrSingleQuoted ::= S_QUOTE attrSingleQuotedValue S_QUOTE
					attrDoubleQuoted ::= D_QUOTE attrDoubleQuotedValue D_QUOTE

chars::=SIMPLE_SYMBOL
wx::='wx'

tagName ::= chars
wxKeyword ::= chars
private endOfLine::= WHITE_SPACE | EOL | comment
comment ::= COMMENT_BEGIN validRValue? COMMENT_END

attrSingleQuotedValue ::= value
attrDoubleQuotedValue ::= value
value::= validRValue | (DBL_LBR validRValue DBL_RBR)
private vv::=VALID_INTEROP| chars
validRValue::= vv (COLON vv)*